name: Example

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    
jobs:
  statsig-example:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Evaluate
        id: statsig
        uses: ./
        with:
          sdk-key: ${{ secrets.SDK_KEY }}
          user: '{ "userID": "test123", "email": "test123@statsig.com" }'
          log-exposures: 'true'
          gates: | 
            always_pass
            always_fail
            statsig_email
          configs: |
            statsig_pets
          experiments: |
            test_experiment
          events: |
            { "eventName": "example_event_1", "value": 1, "metadata": { "some string": "string", "some number": 123} }
            { "eventName": "example_event_2", "value": 2, "user": { "userID": "test456", "email": "test456@statsig.com" } }
      - name: Print output
        run: |
          echo ${{ steps.statsig.outputs['gate::always_pass'] }}
          echo ${{ steps.statsig.outputs['gate::always_fail'] }}
          echo ${{ steps.statsig.outputs['gate::statsig_email'] }}
          echo '${{ toJSON(steps.statsig.outputs['config::statsig_pets::roles']) }}'
          echo ${{ steps.statsig.outputs['experiment::test_experiment::A string'] }}
          echo ${{ steps.statsig.outputs['experiment::test_experiment::A number'] }}
          echo ${{ steps.statsig.outputs['experiment::test_experiment::A boolean'] }}
          echo '${{ toJSON(steps.statsig.outputs['experiment::test_experiment::An object']) }}'
          echo '${{ toJSON(steps.statsig.outputs['experiment::test_experiment::An array']) }}'